import copy
from collections import defaultdict

N = 123
linked = [[0 for _ in range(N + 1)] for _ in range(N + 1)]
line = [(1, 2), (1, 3), (1, 10), (2, 16), (3, 14), (3, 71), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 24), (9, 33),
        (10, 11), (11, 18), (11, 45), (11, 47), (12, 13), (13, 43), (14, 15), (15, 39), (16, 18), (17, 51),
        (18, 19), (19, 51), (20, 21), (21, 22), (22, 23), (23, 58), (24, 25), (25, 26), (26, 27), (27, 36), (28, 29),
        (29, 30), (30, 31), (31, 32), (32, 53), (32, 86), (33, 34), (34, 35), (35, 36),
        (36, 37), (37, 38), (38, 41), (38, 64), (38, 83), (39, 40), (40, 86), (40, 98), (41, 42), (41, 62), (42, 43),
        (42, 68), (42, 69), (43, 78), (44, 45), (45, 46), (46, 86), (47, 48), (48, 49), (48, 51), (49, 50), (50, 53),
        (51, 52), (53, 54), (54, 55), (54, 75), (54, 87), (55, 56), (56, 57), (56, 58), (58, 59), (59, 60), (60, 61),
        (62, 63), (63, 117), (64, 65), (65, 66), (66, 67), (67, 68), (67, 69), (68, 70), (69, 70), (70, 103), (70, 118),
        (71, 72), (72, 73), (73, 74), (74, 93), (75, 76), (76, 77), (77, 81), (77, 88), (78, 79), (78, 80), (78, 90),
        (81, 82), (83, 84), (84, 85), (85, 90), (85, 101), (86, 87), (88, 89), (89, 93), (90, 91), (91, 92), (92, 120),
        (93, 94), (94, 95), (95, 96), (96, 97), (97, 99), (97, 104), (98, 99), (99, 100), (101, 102), (102, 103),
        (104, 105), (105, 106), (105, 114), (106, 107), (107, 108), (108, 109), (109, 110), (108, 117), (111, 112), (112, 113),
        (114, 115), (115, 116), (117, 118), (118, 119), (118, 120), (118, 123), (120, 121), (121, 122)]


dic = {'A1': (1,), 'A2': (2,), 'A3': (3,), 'A4': (4, 5, 6, 7,), 'A5': (8, 9,), 'A6': (10,), 'A7': (11,), 'A8': (12,), 'A9': (13,), 'A10': (14,), 'A11': (15,), 'A12': (16, 17,), 'A13': (18, 19,),
    'B1': (20, 21,), 'B2': (22, 23,), 'B3': (24, 25,), 'B4': (26, 27,), 'B5': (28, 29, 30,), 'B6': (31, 32,), 'B7': (33, 34,), 'B8': (35, 36, 37, 38,), 'B9': (39, 40,), 'B10': (41, 42,), 'B11': (43,),
    'C1': (44, 45,), 'C2': (46,), 'C3': (47, 48,), 'C4': (49, 50,), 'C5': (51,), 'C6': (52,), 'C7': (53, 54,), 'C8': (55, 56, 57,), 'C9': (58, 59,), 'C10': (60, 61,), 'C11': (62, 63,), 'C12': (64, 65, 66, 67, 68, 69, 70,),
    'D1': (71, 72,), 'D2': (73, 74,), 'D3': (75,), 'D4': (76, 77,), 'D5': (78,), 'D6': (79, 80,), 'D7': (81,), 'D8': (82,), 'D9': (83,), 'D10': (84, 85,), 'D11': (86,), 'D12': (87,),
    'E1': (88,), 'E2': (89,), 'E3': (90, 91,), 'E4': (92,), 'E5': (93, 94,), 'E6': (95, 96,), 'E7': (97,), 'E8': (98, 99,), 'E9': (100,), 'E10': (101, 102,), 'E11': (103,),
    'F1': (104, 105, 106,), 'F2': (107, 108, 109, 110,), 'F3': (111,), 'F4': (112, 113,), 'F5': (114, 115,), 'F6': (116,), 'F7': (117,), 'F8': (118, 119,), 'F9': (120, 121,), 'F10': (122, 123,)}

reversed_dic = {}

for unit_c, unit_d_array in dic.items():
    for unit_d in unit_d_array:
        reversed_dic[unit_d] = unit_c


def matrix_multi(arr1, arr2):
    result = [[0 for _ in range(len(arr2[0]))] for _ in range(len(arr1))]
    for i in range(len(arr1)):
        for j in range(len(arr2[0])):
            for k in range(len(arr1[0])):
                result[i][j] += (arr1[i][k] * arr2[k][j])
    return result


def power(Matrix, n):
    if n == 1:
        return Matrix
    else:
        if n % 2 == 0:
            temp = power(Matrix, n // 2)
            return matrix_multi(temp, temp)
        else:
            temp = power(Matrix, n-1)
            return matrix_multi(temp, Matrix)


for i in line:
    a, b = i[0], i[1]
    linked[a][b] = 1

my_matrix = copy.deepcopy(linked)


for k in range(2, 30):
    S = power(linked, k)
    cnt = 0
    for i in range(N + 1):
        for j in range(N + 1):
            if S[i][j] == 1:
                my_matrix[i][j] = 1

result = defaultdict(set)
for i in range(1, N + 1):
    for j in range(1, N + 1):
        if my_matrix[i][j] == 1:
            result[reversed_dic[i]].add(reversed_dic[j])
for line in result.items():
    print(line)






